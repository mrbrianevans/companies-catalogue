name: Build and Deploy Frontend to Bucket

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

# Required repository secrets/vars:
# - S3_ACCESS_KEY_ID:      Access key for your S3-compatible storage
# - S3_SECRET_ACCESS_KEY:  Secret key for the above access key
# - S3_BUCKET:             Target bucket name (e.g., my-frontend-bucket)
# - S3_ENDPOINT:           Endpoint URL for S3 API (e.g., https://s3.amazonaws.com or https://minio.example.com)
# Optional:
# - S3_REGION:             Region to use (defaults to auto if not provided)
# Notes: You may define these as repository Secrets or Variables; the workflow checks secrets first.

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build
        run: bun run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build
          if-no-files-found: error
          retention-days: 7

      # Authenticate for AWS CLI using S3_* secrets and support custom S3 endpoint
      - name: Sync to S3-compatible storage
        env:
          BUCKET: ${{ secrets.S3_BUCKET || vars.S3_BUCKET }}
          S3_ENDPOINT: ${{ secrets.S3_ENDPOINT || vars.S3_ENDPOINT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.S3_REGION || vars.S3_REGION }}
          AWS_EC2_METADATA_DISABLED: true
        run: |
          if [ -z "$BUCKET" ]; then
            echo "S3 bucket is not set. Define S3_BUCKET as a repository secret or variable." >&2
            exit 1
          fi

          # Default region if not provided
          if [ -z "$AWS_DEFAULT_REGION" ]; then
            export AWS_DEFAULT_REGION="auto"
          fi

          # Prepare endpoint flag if provided
          ENDPOINT_ARG=""
          if [ -n "$S3_ENDPOINT" ]; then
            ENDPOINT_ARG="--endpoint-url $S3_ENDPOINT"
          fi

          DEST="s3://$BUCKET"
          echo "Syncing build/ to $DEST (endpoint: ${S3_ENDPOINT:-default})"

          aws s3 sync build "$DEST" \
            $ENDPOINT_ARG \
            --delete \
            --only-show-errors \
            --cache-control "public, max-age=31536000, s-maxage=31536000, immutable" \
            --exclude "index.html"

          aws s3 cp build/index.html "$DEST/index.html" \
            $ENDPOINT_ARG \
            --only-show-errors \
            --cache-control "no-cache, no-store, must-revalidate" \
